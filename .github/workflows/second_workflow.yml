#github actions
name: "workflow1"
run-name: multiple jobs

#env:
#  name: "Siddhesh"
#  repository: 'DevOpsuserdike/githubaction1'

on: 
  workflow_dispatch:
  push:
#    branches-ignore:
#      - 'main'
    branches:
      - 'dev'
#    tags:
#      - v.1.0.0

#  pull_request:
#    types: [opened, reopened]
    paths-ignore:
      - differentworkflowcodes/*
#      - .github/workflows/*
jobs:
  lintjob:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: "lint job"
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.REPOSITORY }}
#          repository: 'DevOpsuserdike/githubaction1'

      - name: "setup nodejs"
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: new variiable
        run: echo "name=${{ vars.name}}" >> "$GITHUB_OUTPUT"
#        run: echo "name=${{ env.name}}" >> "$GITHUB_OUTPUT"

  installdep:
    needs: [lintjob]
    runs-on: ubuntu-latest
    steps:
      - name: "lint job"
        uses: actions/checkout@v4
        with:
#          repository: ${{ env.repository}}
          repository: ${{ vars.REPOSITORY }}  

      - name: "setup nodejs"
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: |
          echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
          echo "date=$(/bin/date -u "+%Y%m%d")" >> $GITHUB_OUTPUT

      - name: caching dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ steps.npm-cache-dir.outputs.date }}-${{ hashFiles('**/package-lock.json') }}
          
      - name: "extract dependencies and check availability"
        run: npm ci
  
  testjob:
    needs: [installdep]
    runs-on: ubuntu-latest
    steps:
      - name: "lint job"
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.REPOSITORY }}
#          repository: 'DevOpsuserdike/githubaction1'

      - name: "setup nodejs"
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: |
          echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
          echo "date=$(/bin/date -u "+%Y%m%d")" >> $GITHUB_OUTPUT

      - name: caching dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ steps.npm-cache-dir.outputs.date }}-${{ hashFiles('**/package-lock.json') }}

      - name: "extract dependencies and check availability"
        run: npm ci

      - name: "Test job"
        run: npm test

  buildjob:
    if: ${{ failure() }}
    needs: [testjob]
    outputs:
      files: ${{ steps.filesGenerated.outputs.files }}
    runs-on: ubuntu-latest
    steps:
      - name: "lint job"
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.REPOSITORY }}
#          repository: ${{ env.repository}}

      - name: "setup nodejs"
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: |
          echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
          echo "date=$(/bin/date -u "+%Y%m%d")" >> $GITHUB_OUTPUT

      - name: caching dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ steps.npm-cache-dir.outputs.date }}-${{ hashFiles('**/package-lock.json') }}

      - name: "extract dependencies and check availability"
        run: npm ci

      - name: "build job"
        run: |
          npm install
          npm run build

      - name: file details
        id: filesGenerated
        run: find dist/assets/index* -type f -exec echo 'files={}' ';' >> "$GITHUB_OUTPUT"

      - uses: actions/upload-artifact@v4
        with:
    # Name of the artifact to upload.
    # Optional. Default is 'artifact'
          name: artifacts-name

    # A file, directory or wildcard pattern that describes what to upload
    # Required.
          path: |
            package-lock.json
            dist/*
  downloadartifacts:
    needs: buildjob
    runs-on: ubuntu-latest
    steps:
      - name : workspace details
        run: echo $GITHUB_WORKSPACE

      - uses: actions/download-artifact@v4
        with: 
    # Name of the artifact to download.
    # If unspecified, all artifacts for the run are downloaded.
    # Optional.
          name: artifacts-name
      - name : files
        run: |
          pwd
          ls -la 
  filesgenerated:
    needs: [buildjob]
    runs-on: ubuntu-latest
    steps:
      - name: files filesGenerated
        run: echo ${{ needs.buildjob.outputs.files }}
  
      